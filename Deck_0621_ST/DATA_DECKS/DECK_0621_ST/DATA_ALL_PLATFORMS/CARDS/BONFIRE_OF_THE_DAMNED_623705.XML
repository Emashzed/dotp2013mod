<?xml version='1.0'?>
<CARD_V2>
  <FILENAME text="BONFIRE_OF_THE_DAMNED_623705" />
  <CARDNAME text="BONFIRE_OF_THE_DAMNED" />
  <TITLE>
    <LOCALISED_TEXT LanguageCode="en-US"><![CDATA[Bonfire of the Damned]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="fr-FR"><![CDATA[Bonfire of the Damned]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="es-ES"><![CDATA[Bonfire of the Damned]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="de-DE"><![CDATA[Bonfire of the Damned]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="it-IT"><![CDATA[Bonfire of the Damned]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="jp-JA"><![CDATA[Bonfire of the Damned]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="ko-KR"><![CDATA[Bonfire of the Damned]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="ru-RU"><![CDATA[Bonfire of the Damned]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="pt-BR"><![CDATA[Bonfire of the Damned]]></LOCALISED_TEXT>
  </TITLE>
  <MULTIVERSEID value="623705" />
  <ARTID value="623705" />
  <ARTIST name="James Paick" />
  <CASTING_COST cost="{X}{X}{R} " />
  <TYPE metaname="Sorcery" />
  <EXPANSION value="DPG" />
  <RARITY metaname="M" />
  <SPELL_ABILITY dangerous="1" filter_zone="ZONE_IN_PLAY_AND_PLAYERS">
    <LOCALISED_TEXT LanguageCode="en-US"><![CDATA[Bonfire of the Damned deals X damage to target player and each creature he or she controls.]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="fr-FR"><![CDATA[Bonfire of the Damned deals X damage to target player and each creature he or she controls.]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="es-ES"><![CDATA[Bonfire of the Damned deals X damage to target player and each creature he or she controls.]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="de-DE"><![CDATA[Bonfire of the Damned deals X damage to target player and each creature he or she controls.]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="it-IT"><![CDATA[Bonfire of the Damned deals X damage to target player and each creature he or she controls.]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="jp-JA"><![CDATA[Bonfire of the Damned deals X damage to target player and each creature he or she controls.]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="ko-KR"><![CDATA[Bonfire of the Damned deals X damage to target player and each creature he or she controls.]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="ru-RU"><![CDATA[Bonfire of the Damned deals X damage to target player and each creature he or she controls.]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="pt-BR"><![CDATA[Bonfire of the Damned deals X damage to target player and each creature he or she controls.]]></LOCALISED_TEXT>
    <TARGET_DEFINITION id="0">
    local filter = Object():GetFilter()
    filter:Clear()
    filter:SetFilterType( FILTER_TYPE_PLAYERS )
    filter:SetHint( HINT_ENEMY_ONLY, EffectController() )
    </TARGET_DEFINITION>
    <TARGET_DETERMINATION>
    return AtLeastOneTargetFromDefinition(0)
    </TARGET_DETERMINATION>
    <PLAY_TIME_ACTION target_choosing="1">
    EffectController():ChooseTarget( 0, "CARD_QUERY_CHOOSE_PLAYER_DEAL_X_DAMAGE", EffectDC():Make_Targets(0) )
    </PLAY_TIME_ACTION>
    <RESOLUTION_TIME_ACTION ignore_filter="1">
    if GetObjectX() &gt; 0 then 
      ObjectDC():Set_Int( 1, GetObjectX() )
    end
    </RESOLUTION_TIME_ACTION>
    <FILTER>
    local target_player = EffectDC():Get_Targets(0):Get_PlayerPtr(0)
    if (target_player ~= nil) then
      return (FilteredCard() ~= nil and
      FilteredCard():GetCardType():Test( CARD_TYPE_CREATURE ) ~= 0 and
      FilteredCard():GetZone() == ZONE_IN_PLAY and 
      FilteredCard():GetController() == target_player) or (FilteredPlayer() == target_player)
    else
      return false
    end  
    </FILTER>
    <RESOLUTION_TIME_ACTION>
    local damage = ObjectDC():Get_Int(1)
    if (FilteredPlayer() ~= nil) then
    	FilteredPlayer():DealDamage(damage , Object())  
    else FilteredCard():DealDamage(damage , Object())  
    end  
    </RESOLUTION_TIME_ACTION>
    <SFX text="TARGET_PLAYER_MAGMA_PLAY" />
  </SPELL_ABILITY>
  <TRIGGERED_ABILITY forced_skip="1" filter_zone="ZONE_IN_PLAY" active_zone="ZONE_HAND">
    <LOCALISED_TEXT LanguageCode="en-US"><![CDATA[Miracle {X}{R} |(You may cast this card for its miracle cost when you draw it if it’s the first card you drew this turn.)|]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="fr-FR"><![CDATA[Miracle {X}{R} |(You may cast this card for its miracle cost when you draw it if it’s the first card you drew this turn.)|]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="es-ES"><![CDATA[Miracle {X}{R} |(You may cast this card for its miracle cost when you draw it if it’s the first card you drew this turn.)|]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="de-DE"><![CDATA[Miracle {X}{R} |(You may cast this card for its miracle cost when you draw it if it’s the first card you drew this turn.)|]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="it-IT"><![CDATA[Miracle {X}{R} |(You may cast this card for its miracle cost when you draw it if it’s the first card you drew this turn.)|]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="jp-JA"><![CDATA[Miracle {X}{R} |(You may cast this card for its miracle cost when you draw it if it’s the first card you drew this turn.)|]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="ko-KR"><![CDATA[Miracle {X}{R} |(You may cast this card for its miracle cost when you draw it if it’s the first card you drew this turn.)|]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="ru-RU"><![CDATA[Miracle {X}{R} |(You may cast this card for its miracle cost when you draw it if it’s the first card you drew this turn.)|]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="pt-BR"><![CDATA[Miracle {X}{R} |(You may cast this card for its miracle cost when you draw it if it’s the first card you drew this turn.)|]]></LOCALISED_TEXT>
    <TRIGGER value="DREW_CARD" simple_qualifier="controller">
    local drawCard = MTG():Interrogate_CardsDrawnThisTurn(EffectController())
    if ObjectDC():Get_Int(0) == 1 and drawCard == 1 then
      ObjectDC():Set_Int( 0, 0 )
      return TriggerPlayer() == EffectController()
    else
    	return false
    end
    </TRIGGER>
    <TARGET_DETERMINATION>
    local filter = Object():GetFilter()
    filter:Clear()
    filter:SetFilterType( FILTER_TYPE_PLAYERS )
    local total = filter:CountStopAt( 1 )
    if total == 1 and Object():GetZone() == ZONE_HAND then
      -- success
    	return 1
    else
      -- fail
      return 0
    end
    </TARGET_DETERMINATION>
    <COST type="mana" cost="{R}" qualifier="conditional" />
    <RESOLUTION_TIME_ACTION conditional="if">
    if Object():GetZone() == ZONE_HAND and EffectController():IsAI() == 0 then
      EffectController():BeginNewNumericalChoice()
      EffectController():AddNumericalChoiceAnswer(EffectController():GetTotalMana())
      EffectController():AskNumericalChoiceQuestion("CARD_QUERY_WELL_OF_LOST_DREAMS")
    end
    </RESOLUTION_TIME_ACTION>
    <RESOLUTION_TIME_ACTION conditional="if">
    if EffectController():IsAI() == 0 then
      if EffectController():CanAfford("{"..Object():GetNumericalChoiceResult().."}") == 1 then
        ObjectDC():Set_Int(1, Object():GetNumericalChoiceResult())
        EffectController():TapLand("{"..Object():GetNumericalChoiceResult().."}")
        Object():PlayFreeFromAnywhere( EffectController() ) 
      end
    else
      if Object():GetZone() == ZONE_HAND then
        local tap_count = 0
        local filter = Object():GetFilter()
        filter:Clear()
        filter:NotTargetted()
        filter:SetZone(ZONE_IN_PLAY)
        filter:AddCardType(CARD_TYPE_CREATURE)
        filter:SetControllersTeam( EffectController():GetTeam() )
        filter:AddExtra( FILTER_EXTRA_FLIP_TEAM )
        local total = filter:EvaluateObjects()
        if total &gt; 0 then
    	    for i=0,total-1 do
    	  	  local creature = filter:GetNthEvaluatedObject(i)    			
    	  	  if creature ~= nil then				
    	  	    if creature:GetCurrentToughness() &gt; tap_count then
    		  	    tap_count = creature:GetCurrentToughness()
    		      end
    		    end
    	    end    		
   	    end
        local num_players = MTG():GetNumberOfPlayers()
        for i=0,num_players-1 do
        	local player = MTG():GetNthPlayer(i)
    	    if player ~= nil and player:GetTeam() ~= EffectController():GetTeam() then
    	      if player:GetLifeTotal() &gt; tap_count then
    		  	  tap_count = player:GetLifeTotal()
    	      end
    	    end
        end
        filter:Clear()
        filter:AddCardName( "GISELA_BLADE_OF_GOLDNIGHT" )
        filter:SetControllersTeam( EffectController():GetTeam() )
        filter:AddExtra( FILTER_EXTRA_FLIP_TEAM )
        filter:SetZone(ZONE_IN_PLAY)
        filter:NotTargetted()
        if filter:CountStopAt( 1 ) == 1 then
          tap_count = tap_count * 2
    	  end
        filter:Clear()
        filter:AddCardName( "GISELA_BLADE_OF_GOLDNIGHT" )
        filter:SetControllersTeam( EffectController():GetTeam() )
        filter:SetZone(ZONE_IN_PLAY)
        filter:NotTargetted()
        if filter:CountStopAt( 1 ) == 1 then
          tap_count = math.ceil(tap_count/2)
    	  end
        filter:Clear()
        filter:AddCardName( "FIRE_SERVANT" )
        filter:AddCardName( "ANTHEM_OF_RAKDOS" )
        filter:SetController( EffectController() )
        filter:SetZone(ZONE_IN_PLAY)
        filter:NotTargetted()
        if filter:CountStopAt( 1 ) == 1 then
          tap_count = math.ceil(tap_count/2)
    	  end
        filter:Clear()
        filter:AddCardName( "FURNACE_OF_RATH" )
        filter:SetZone(ZONE_IN_PLAY)
        filter:NotTargetted()
        if filter:CountStopAt( 1 ) == 1 then
          tap_count = math.ceil(tap_count/2)
    	  end
    	  if EffectController():GetTotalMana() &lt; tap_count then
    		  tap_count = EffectController():GetTotalMana()
    	  end
        ObjectDC():Set_Int(1, tap_count)
        EffectController():TapLand("{"..tap_count.."}")
        Object():PlayFreeFromAnywhere( EffectController() ) 
      end
    end
    </RESOLUTION_TIME_ACTION>
  </TRIGGERED_ABILITY>  
  <TRIGGERED_ABILITY internal="1" pre_trigger="1" priority="-1" active_zone="ZONE_LIBRARY">
    <TRIGGER value="DREW_CARD" simple_qualifier="controller">
    local card = EffectController():Library_GetNth(0) 
    local source = Object()
    local drawCard = MTG():Interrogate_CardsDrawnThisTurn(EffectController())
    if card ~= nil and source ~= nil then 
      if card == source and drawCard == 0 then
    	  return TriggerPlayer() == EffectController()
      else
    	  return false
      end
    else
    	return false
    end
    </TRIGGER>
    <RESOLUTION_TIME_ACTION>
    ObjectDC():Set_Int( 0, 1 )
    </RESOLUTION_TIME_ACTION>
  </TRIGGERED_ABILITY>
  <AI_BASE_SCORE score="1200" zone="ZONE_HAND" />
</CARD_V2>
