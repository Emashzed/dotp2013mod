<?xml version='1.0'?>
<CARD_V2>
  <FILENAME text="LIVING_INFERNO_278135" />
  <CARDNAME text="LIVING_INFERNO" />
  <TITLE>
    <LOCALISED_TEXT LanguageCode="en-US"><![CDATA[Living Inferno]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="fr-FR"><![CDATA[Fournaise vivante]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="es-ES"><![CDATA[Infierno viviente]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="de-DE"><![CDATA[Lebendes Inferno]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="it-IT"><![CDATA[Inferno Vivente]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="jp-JA"><![CDATA[生きている業火]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="ko-KR"><![CDATA[살아 있는 불바다]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="ru-RU"><![CDATA[Воплощение Ада]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="pt-BR"><![CDATA[Inferno Vivo]]></LOCALISED_TEXT>
  </TITLE>
  <MULTIVERSEID value="278135" />
  <ARTID value="91701" />
  <ARTIST name="John Avon" />
  <CASTING_COST cost="{6}{R}{R}" />
  <TYPE metaname="Creature" />
  <SUB_TYPE metaname="Elemental" order_de-DE="0" order_es-ES="0" order_fr-FR="0" order_it-IT="0" order_jp-JA="0" order_ko-KR="0" order_pt-BR="0" order_ru-RU="0" />
  <EXPANSION value="DPG" />
  <RARITY metaname="R" />
  <POWER value="8" />
  <TOUGHNESS value="5" />
  <ACTIVATED_ABILITY LKI_shield_effect_source="1" dangerous="1">
    <LOCALISED_TEXT LanguageCode="en-US"><![CDATA[{T}: Living Inferno deals damage equal to its power divided as you choose among any number of target creatures. Each of those creatures deals damage equal to its power to Living Inferno.]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="fr-FR"><![CDATA[{T}: La Fournaise vivante inflige un nombre de blessures égal à sa force, réparties de la manière que vous choisissez parmi un nombre quelconque de créatures ciblées. Chacune de ces créatures inflige à la Fournaise vivante un nombre de blessures égal à sa force.]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="es-ES"><![CDATA[{T}: El Infierno viviente hace una cantidad de daño igual a su fuerza dividido como elijas entre cualquier número de criaturas objetivo. Cada una de esas criaturas hace daño igual a su fuerza al Infierno viviente.]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="de-DE"><![CDATA[{T}: Das Lebende Inferno fügt Schadenspunkte in Höhe seiner Stärke zu, deren Verteilung auf eine beliebige Anzahl an Kreaturen deiner Wahl du bestimmst. Jede dieser Kreaturen fügt dem Lebenden Inferno Schadenspunkte in Höhe ihrer Stärke zu.]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="it-IT"><![CDATA[{T}: L’Inferno Vivente infligge danno pari alla sua forza suddiviso a tua scelta tra un qualsiasi numero di creature bersaglio. Ognuna di quelle creature infligge all’Inferno Vivente danno pari alla propria forza.]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="jp-JA"><![CDATA[{T}：望む数のクリーチャーを対象とする。生きている業火はそれらに、自身のパワーに等しい点数のダメージを好きなように割り振って与える。 それらの各クリーチャーは、自身のパワーに等しい点数のダメージを生きている業火に与える。]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="ko-KR"><![CDATA[{T}: 원하는 개수만큼의 생물을 목표로 정한다. 살아 있는 불바다는 그 목표들에게 당신이 배분한 대로 자신의 공격력만큼의 피해를 입힌다. 목표로 정해진 각 생물은 살아 있는 불바다에게 자신의 공격력만큼의 피해를 입힌다.]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="ru-RU"><![CDATA[{T}: Воплощение Ада наносит повреждения, равные своей силе, распределенные по вашему выбору между любым количеством целевых существ. Каждое из тех существ наносит повреждения, равные своей силе, Воплощению Ада.]]></LOCALISED_TEXT>
    <LOCALISED_TEXT LanguageCode="pt-BR"><![CDATA[{T}: Inferno Vivo causa dano igual ao seu poder, distribuído à sua escolha entre qualquer número de criaturas alvo. Cada uma daquelas criaturas causa dano igual ao seu poder a Inferno Vivo..]]></LOCALISED_TEXT>
    <COST type="TapSelf" />
    <TARGET_DEFINITION id="0">
    local filter = Object():GetFilter()
    filter:Clear()
    filter:AddCardType( CARD_TYPE_CREATURE )
    filter:SetZone( ZONE_IN_PLAY )
    filter:SetHint( HINT_ENEMY_ONLY, EffectController() )
    </TARGET_DEFINITION>
    <TARGET_DETERMINATION>
    return AtLeastOneTargetFromDefinition(0)
    </TARGET_DETERMINATION>
    <PLAY_TIME_ACTION repeating="1" target_choosing="1">
    local n = MTG():GetActionRepCount()
    local damage_to_deal = EffectSource():GetCurrentPower()
    local player = EffectController()
    local filter = Object():GetFilter() 
    local parity = n % 2
    EffectDC():Set_Int(1000, damage_to_deal)
    if n &lt; (damage_to_deal*2) then
    	if (parity == 0) then
    	
    		-- ask the query
    		local targetDC = EffectDC():Get_Targets(1)
    		
    		if targetDC == nil then
    			targetDC = EffectDC():Make_Targets(1)
    		else
    			targetDC:Clear()
    		end
    	
    		if (n == 0) then
    			-- ask for first object
    			Object():LoadTargetDefinition(0)	-- we don't have to refresh the filter each time as we're asking the same question over and over
    			
    			player:ChooseTarget( NO_VALIDATION, "CARD_QUERY_CHOOSE_CREATURE_TO_DAMAGE", targetDC )
    			
    		else
    		
    			if player:IsAI() == 0 then
    				-- not-AI, allow early out if already selected a target
    				player:ChooseTargetWithFlags( NO_VALIDATION, "CARD_QUERY_CHOOSE_CREATURE_TO_DAMAGE", targetDC, QUERY_FLAG_CAN_BE_FINISHED_EARLY )
    			
    			else
    				-- AI, force early out (pick single target optimisation)
    			end
    		end
    	
    	else
    	
    		-- extract target, put into datachest
    		local storageDC = EffectDC():Get_Targets(2)
    		
    		if storageDC == nil then
    			storageDC = EffectDC():Make_Targets(2)
    			storageDC:AttachTargetDefinition(0)
    		end
    	
    		local target_creature = EffectDC():Get_Targets(1):Get_CardPtr(0)
    		
    		if target_creature ~= nil then
    			-- target selected, store in storageDC
    			storageDC:Set_CardPtr(((n-1)/2), target_creature)
    		else
    			-- no target selected, so stop iteration (after making a note
    			-- of last creature and number of counters to give them)
    			if (((n-1)/2)&gt;0) then
    				EffectDC():Set_CardPtr( 3, storageDC:Get_CardPtr(((n-1)/2)-1) )
    				EffectDC():Set_Int(4, damage_to_deal-((n-1)/2))
    			end
    			
    			return false
    		end
    	end
    	
    	return true
    	
    end
    return false
    </PLAY_TIME_ACTION>
    <RESOLUTION_TIME_ACTION>
    local total_damage = EffectDC():Get_Int(1000)
    local storageDC = EffectDC():Get_Targets(2)
    if storageDC ~= nil then
    	local targets_chest = EffectDC():Make_Chest(100)
    	
    	for i=0,total_damage-1 do
    		local target = storageDC:Get_CardPtr(i)
    		
    		if target ~= nil then
    		
    			targets_chest:Set_CardPtr(i,target)
    			storageDC:Free_Compartment(i)
    			local damage_to_deal = 1
    			
    			-- for the rest of the cards in this DC, count and erase them
    			
    			for j=i+1,total_damage-1 do
    				local target_match = storageDC:Get_CardPtr(j)
    				
    				if target_match == target then
    					damage_to_deal = damage_to_deal + 1
    					storageDC:Free_Compartment(j)
    				end
    			end
    			
    			-- check 'final target', and set damage based on that
    			if EffectDC():Get_CardPtr(3) == target then
    				damage_to_deal = damage_to_deal + EffectDC():Get_Int(4)
    				EffectDC():Free_Compartment(3)
    				EffectDC():Free_Compartment(4)
    			end
    			
    			-- deal accumulated damage to target (this will only happen once per target)
    			target:DealDamage( damage_to_deal, EffectSource() )  
    		end
    	end
    end
    </RESOLUTION_TIME_ACTION>
    <RESOLUTION_TIME_ACTION>
    local i=0
    local damage = 0
    local total_damage = EffectDC():Get_Int(1000)
    local target_chest = EffectDC():Get_Chest(100)
    for i=0,total_damage-1 do
    	local target_card = target_chest:Get_CardPtr(i)
    	if target_card ~= nil then
    		damage = target_card:GetCurrentCharacteristics():Power_Get()
    		EffectSource():DealDamage( damage, target_card )
    	end
    end		
    </RESOLUTION_TIME_ACTION>
    <AI_AVAILABILITY type="in_response" />
    <AI_AVAILABILITY step="begin_combat" turn="their_turn" />
    <AI_AVAILABILITY step="main_1" turn="my_turn" />
    <AI_AVAILABILITY step="declare_attackers" turn="their_turn" />
    <AI_AVAILABILITY step="declare_blockers" />
    <AI_AVAILABILITY step="end_of_turn" />
  </ACTIVATED_ABILITY>
  <SFX text="COMBAT_FLAME_LARGE_ATTACK" power_boundary_min="4" power_boundary_max="-1" />
  <SFX text="COMBAT_FLAME_SMALL_ATTACK" power_boundary_min="1" power_boundary_max="3" />
  <AI_BASE_SCORE score="600" zone="ZONE_IN_PLAY" />
</CARD_V2>